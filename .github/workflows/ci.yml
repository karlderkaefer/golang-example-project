name: ci

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:

env:
  REGISTRY_IMAGE: karlderkaefer/golang-example-project

jobs:
  test:
    runs-on: ubuntu-latest
    name: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          cache: true
          go-version-file: "go.mod"
      - run: go build .
      - run: go test -short ./... -v -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
  # docker-build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform:
  #         - linux/amd64
  #         - linux/arm/v6
  #         - linux/arm/v7
  #         - linux/arm64
  #   steps:
  #     -
  #       name: Prepare
  #       run: |
  #         platform=${{ matrix.platform }}
  #         echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV          
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v4
  #     -
  #       name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY_IMAGE }}
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     -
  #       name: Build and push by digest
  #       id: build
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         platforms: ${{ matrix.platform }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
  #     -
  #       name: Export digest
  #       run: |
  #         mkdir -p /tmp/digests
  #         digest="${{ steps.build.outputs.digest }}"
  #         touch "/tmp/digests/${digest#sha256:}"          
  #     -
  #       name: Upload digest
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: digests-${{ env.PLATFORM_PAIR }}
  #         path: /tmp/digests/*
  #         if-no-files-found: error
  #         retention-days: 1
  
  docker-build:
    name: Build multi-platform Docker image
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
      - name: Login to container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - uses: docker/build-push-action@v5
        with:
          context: .
          # push only on main or on tags
          push: ${{ github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/') }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}



  # docker-push:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - docker-build
  #   steps:
  #     -
  #       name: Download digests
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: /tmp/digests
  #         pattern: digests-*
  #         merge-multiple: true
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY_IMAGE }}
  #         tags: |
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
  #     - name: Login to container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #         registry: ghcr.io
  #     -
  #       name: Create manifest list and push
  #       working-directory: /tmp/digests
  #       run: |
  #         docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
  #           $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
  #     -
  #       name: Inspect image
  #       run: |
  #         docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}          